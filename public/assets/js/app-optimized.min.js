import{initializeApp}from"https://www.gstatic.com/firebasejs/9.6.1/firebase-app.js";import{getDatabase,ref,set,onValue,get,remove}from"https://www.gstatic.com/firebasejs/9.6.1/firebase-database.js";const firebaseConfig={apiKey:"AIzaSyDi-2L7pOKJH1gOAJnSvhMfLUINRPTX7Yg",authDomain:"smart-building-3e5c1.firebaseapp.com",databaseURL:"https://smart-building-3e5c1-default-rtdb.asia-southeast1.firebasedatabase.app",projectId:"smart-building-3e5c1",storageBucket:"smart-building-3e5c1.appspot.com",messagingSenderId:"693247019169",appId:"1:693247019169:web:xxxxxx"},app=initializeApp(firebaseConfig),database=getDatabase(app);class ScheduleManager{constructor(){this.schedules=[],this.deviceStates={},this.scheduleInterval=null,this.lastScheduleCheck=null,this.debounceTimeout=null,this.init()}init(){this.loadSchedules(),this.listenToDeviceChanges(),this.startScheduleChecker(),this.bindEvents()}async loadSchedules(){try{const e=ref(database,"schedules"),t=await get(e);if(t.exists()){const e=Object.values(t.val());JSON.stringify(this.schedules)!==JSON.stringify(e)&&(this.schedules=e)}}catch(e){}}listenToDeviceChanges(){const e=ref(database,"devices");onValue(e,(e=>{if(e.exists()){const t=e.val();JSON.stringify(this.deviceStates)!==JSON.stringify(t)&&(this.deviceStates=t,this.debounceUpdateUI())}}))}debounceUpdateUI(){this.debounceTimeout&&clearTimeout(this.debounceTimeout),this.debounceTimeout=setTimeout((()=>{this.updateDeviceUI()}),100)}updateDeviceUI(){Object.keys(this.deviceStates).forEach((e=>{const t=this.deviceStates[e],s=document.querySelector(`[data-device="${e}"] .device-status`);if(s){const e=1===t.status?"Aktif":"Nonaktif",a="device-status badge "+(1===t.status?"bg-success":"bg-secondary");s.textContent!==e&&(s.textContent=e),s.className!==a&&(s.className=a)}}))}startScheduleChecker(){this.checkSchedules(),this.scheduleInterval=setInterval((()=>{this.checkSchedules()}),6e4)}stopScheduleChecker(){this.scheduleInterval&&(clearInterval(this.scheduleInterval),this.scheduleInterval=null)}checkSchedules(){const e=(new Date).toISOString();if(this.lastScheduleCheck===e)return;this.lastScheduleCheck=e;const t=this.getCurrentDay(),s=this.getCurrentTime(),a={relay1:0,relay2:0};this.schedules.forEach((e=>{if(!e.is_active||e.day_of_week!==t)return;const i=e.start_time,n=e.end_time;this.isTimeInRange(s,i,n)&&(a[e.device_type]=1)})),Object.entries(a).forEach((([e,t])=>{const s=this.deviceStates[e]?.status;s!==t&&this.controlDevice(e,t,"schedule")}))}async controlDevice(e,t,s="manual"){try{const a=ref(database,`devices/${e}`),i={status:parseInt(t),timestamp:(new Date).toISOString(),source:s};await set(a,i),this.deviceStates[e]||(this.deviceStates[e]={}),this.deviceStates[e].status=parseInt(t),this.deviceStates[e].timestamp=i.timestamp,this.deviceStates[e].source=s}catch(e){}}async syncScheduleToFirebase(e){try{const t=ref(database,`schedules/${e.id}`);await set(t,e)}catch(e){throw e}}async removeScheduleFromFirebase(e){try{const t=ref(database,`schedules/${e}`);await remove(t)}catch(e){throw e}}getCurrentDay(){return["sunday","monday","tuesday","wednesday","thursday","friday","saturday"][(new Date).getDay()]}getCurrentTime(){return(new Date).toTimeString().slice(0,5)}isTimeInRange(e,t,s){return e>=t&&e<=s}wasRecentlyActive(e,t){const s=this.timeToMinutes(e),a=this.timeToMinutes(t);return s===a+1||1439===a&&0===s}timeToMinutes(e){const[t,s]=e.split(":").map(Number);return 60*t+s}bindEvents(){const e=async e=>{const t=e.target.dataset.deviceControl,s=e.target.dataset.action;await this.controlDevice(t,s,"manual"),this.updateControlButtons(t,s)},t=async e=>{e.preventDefault(),await this.handleScheduleSubmit(e.target)},s=async e=>{e.preventDefault(),await this.handleScheduleToggle(e.target)},a=async e=>{e.preventDefault(),confirm("Hapus jadwal ini?")&&await this.handleScheduleDelete(e.target)};document.querySelectorAll("[data-device-control]").forEach((t=>{t.addEventListener("click",e,{passive:!1})}));const i=document.querySelector('form[action*="schedule.store"]');i&&i.addEventListener("submit",t,{passive:!1}),document.querySelectorAll('form[action*="schedule.toggle"]').forEach((e=>{e.addEventListener("submit",s,{passive:!1})})),document.querySelectorAll('form[action*="schedule.destroy"]').forEach((e=>{e.addEventListener("submit",a,{passive:!1})}))}async handleScheduleSubmit(e){try{const t=new FormData(e),s={id:Date.now(),name:t.get("name"),device_type:t.get("device_type"),day_of_week:t.get("day_of_week"),start_time:t.get("start_time"),end_time:t.get("end_time"),is_active:!0,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()};if(s.start_time>=s.end_time)return void alert("Jam selesai harus lebih besar dari jam mulai!");if(!(await fetch(e.action,{method:"POST",body:t,headers:{"X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').content}})).ok)throw new Error("Server error");await this.loadSchedules(),e.reset(),this.showMessage("Jadwal berhasil ditambahkan!","success")}catch(e){this.showMessage("Gagal menambahkan jadwal!","error")}}async handleScheduleToggle(e){try{if(!(await fetch(e.action,{method:"POST",body:new FormData(e),headers:{"X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').content}})).ok)throw new Error("Server error");await this.loadSchedules(),this.showMessage("Status jadwal berhasil diubah!","success")}catch(e){this.showMessage("Gagal mengubah status jadwal!","error")}}async handleScheduleDelete(e){try{if(!(await fetch(e.action,{method:"POST",body:new FormData(e),headers:{"X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').content}})).ok)throw new Error("Server error");await this.loadSchedules(),this.showMessage("Jadwal berhasil dihapus!","success")}catch(e){this.showMessage("Gagal menghapus jadwal!","error")}}updateControlButtons(e,t){const s=document.querySelector(`[data-device-control="${e}"][data-action="1"]`),a=document.querySelector(`[data-device-control="${e}"][data-action="0"]`);s&&a&&(1===parseInt(t)?(s.classList.add("btn-success"),s.classList.remove("btn-outline-success"),a.classList.add("btn-outline-danger"),a.classList.remove("btn-danger")):(a.classList.add("btn-danger"),a.classList.remove("btn-outline-danger"),s.classList.add("btn-outline-success"),s.classList.remove("btn-success")))}showMessage(e,t){const s=`<div class="alert ${"success"===t?"alert-success":"alert-danger"} alert-dismissible fade show" role="alert">\n            ${e}\n            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>\n        </div>`,a=document.querySelector(".card");a&&(a.insertAdjacentHTML("afterbegin",s),setTimeout((()=>{const e=a.querySelector(".alert");e&&e.remove()}),5e3))}cleanup(){this.stopScheduleChecker(),this.debounceTimeout&&(clearTimeout(this.debounceTimeout),this.debounceTimeout=null),this.schedules=[],this.deviceStates={}}}document.addEventListener("DOMContentLoaded",(()=>{window.scheduleManager&&window.scheduleManager.cleanup(),window.scheduleManager=new ScheduleManager})),window.addEventListener("beforeunload",(()=>{window.scheduleManager&&window.scheduleManager.cleanup()}));export default ScheduleManager;class PerformanceOptimizer{constructor(){this.intervals=new Set,this.timeouts=new Set,this.isPageVisible=!document.hidden,this.init()}init(){this.overrideTimers(),this.setupVisibilityHandlers(),this.setupMemoryOptimization()}overrideTimers(){const e=window.setInterval,t=window.setTimeout,s=window.clearInterval,a=window.clearTimeout;window.setInterval=(t,s,...a)=>{const i=e(t,s,...a);return this.intervals.add(i),i},window.setTimeout=(e,s,...a)=>{const i=t(e,s,...a);return this.timeouts.add(i),i},window.clearInterval=e=>(this.intervals.delete(e),s(e)),window.clearTimeout=e=>(this.timeouts.delete(e),a(e))}setupVisibilityHandlers(){document.addEventListener("visibilitychange",(()=>{this.isPageVisible=!document.hidden,this.isPageVisible?this.resumeOperations():this.pauseNonCriticalOperations()})),window.addEventListener("beforeunload",(()=>{this.cleanup()}))}setupMemoryOptimization(){"requestIdleCallback"in window&&requestIdleCallback((()=>{this.optimizeMemory()})),setInterval((()=>{this.isPageVisible&&this.optimizeMemory()}),3e5)}pauseNonCriticalOperations(){}resumeOperations(){}optimizeMemory(){window.gc&&window.gc(),this.cleanupOrphanedTimers()}cleanupOrphanedTimers(){document.querySelectorAll("*").length}cleanup(){this.intervals.forEach((e=>clearInterval(e))),this.timeouts.forEach((e=>clearTimeout(e))),this.intervals.clear(),this.timeouts.clear()}}window.performanceOptimizer||(window.performanceOptimizer=new PerformanceOptimizer);
